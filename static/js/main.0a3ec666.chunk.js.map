{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","createDigits","digits","i","push","onClick","calculate","deleteLast","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oqBAGA,SAASA,MACR,cAAuBC,oDAAS,IAAhC,mKAAMC,KAAN,cAAYC,QAAZ,cACA,WAA2BF,oDAAS,IAApC,oKAAMG,OAAN,cAAcC,UAAd,cAEMC,IAAM,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAE3BC,WAAa,SAAbA,WAAaC,OAEhBF,IAAIG,SAASD,QAAmB,KAATN,MACxBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAMjDP,QAAQD,KAAOM,OAEXF,IAAIG,SAASD,QAChBH,UAAUM,KAAKT,KAAOM,OAAOI,cAMzBC,aAAe,WAGpB,IAFA,IAAMC,EAAS,GADW,WAGjBC,GACRD,EAAOE,KACN,qEAAQC,QAAS,kBAAMV,WAAWQ,EAAEH,aAApC,SAEGG,GADMA,KAHFA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAST,OAAOD,GAGFI,UAAY,SAAZA,YACLf,QAAQQ,KAAKT,MAAMU,aAEdO,WAAa,SAAbA,aACL,GAAa,KAATjB,KAAJ,CAIA,IAAMM,MAAQN,KAAKQ,MAAM,GAAI,GAC7BP,QAAQK,OACJF,IAAIG,SAASD,MAAME,OAAO,IAC7BL,UAAUM,KAAKH,MAAMI,WAAWF,MAAM,GAAG,KAGzCL,UAAUM,KAAKH,MAAMI,eAItB,OACE,kEAAKQ,UAAU,MAAf,SACE,mEAAKA,UAAU,OAAf,UACH,mEAAKA,UAAU,UAAf,UACGhB,OAAS,kFAAQA,OAAR,OAA0B,GACpCF,MAAQ,OAGV,mEAAKkB,UAAU,YAAf,UACA,qEAAQH,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eAEA,qEAAQU,QAASE,WAAjB,oBAGD,mEAAKC,UAAU,SAAf,UACEP,eACD,qEAAQI,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAASC,UAAjB,uBAOYlB,2B,+BCxFf,iEAMAqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a3ec666.chunk.js","sourcesContent":["import{ useState } from 'react';\n\n\nfunction App() {\n\tconst[calc, setCalc] = useState(\"\");\n\tconst[result, setResult] = useState(\"\");\n\n\tconst ops = ['/','.','*','+','-','.'];\n\n\tconst updateCalc = value => {\n\t\tif (\n\t\t\t(ops.includes(value) && calc === '' )||(\n\t\t\tops.includes(value) && ops.includes(calc.slice(-1))\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetCalc(calc + value);\n\n\t\tif(!ops.includes(value)) {\n\t\t\tsetResult(eval(calc + value).toString())\n\t\t}\n\n\t}\n\n\n\tconst createDigits = () => {\n\t\tconst digits = [];\n\n\t\tfor (let i = 1; i < 10; i++) {\n\t\t\tdigits.push(\n\t\t\t\t<button onClick={() => updateCalc(i.toString()\n\t\t\t\t\t)} key={i}>\n\t\t\t\t\t\t{i}\n\t\t\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\n\t\treturn digits;\n\t}\n\n\tconst calculate = () => {\n\t\tsetCalc(eval(calc).toString());\n\t}\n\tconst deleteLast = () => {\n\t\tif (calc === ''){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = calc.slice(0, -1);\n\t\tsetCalc(value)\n\t\tif (ops.includes(value.slice(-1))) {\n\t\t\tsetResult(eval(value.toString().slice(0,-1)));  \n\t\t  }\n\t\t  else{\n\t\t\tsetResult(eval(value.toString()));  \n\t\t  }\n\t}\n\n  return (\n    <div className=\"App\">\n      <div className=\"calc\">\n\t\t <div className=\"display\">\n\t\t\t { result ? <span>({result})</span> : ''}\n\t\t\t {calc || \"0\"}\n\t\t </div>\n\n\t\t <div className=\"operators\">\n\t\t\t<button onClick={() => updateCalc('/')}>/</button>\n\t\t\t<button onClick={() => updateCalc('*')}>*</button>\n\t\t\t<button onClick={() => updateCalc('+')}>+</button>\n\t\t\t<button onClick={() => updateCalc('-')}>-</button>\n\n\t\t\t<button onClick={deleteLast}>DEL</button>\n\t\t </div>\n\n\t\t<div className=\"digits\">\n\t\t\t{createDigits()}\n\t\t\t<button onClick={() => updateCalc('0')}>0</button>\n\t\t\t<button onClick={() => updateCalc('.')}>.</button>\n\t\t\t<button onClick={calculate}>=</button>\n\t\t</div>\n\t  </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}